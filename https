#!/usr/bin/env bash
set -euo pipefail
shopt -s inherit_errexit nullglob compat"${BASH_COMPAT=42}"
trap 'kill $(jobs -p) 2>/dev/null' EXIT

if [[ ! -d './.https' ]]; then
  declare https_tmp
  https_tmp="$(mktemp -d)"

  (
    set +x

    cfssl version || brew install cfssl
    cfssljson --version || brew install cfssljson
    deno --version || brew install deno
    jq --version || brew install jq

    cd "$https_tmp"

    echo

    echo '{
      "signing": {
        "default": {
          "expiry": "8760h",
          "usages": [
            "server auth",
            "cert sign",
            "key encipherment",
            "signing"
          ]
        }
      }
    }' | jq > "./config.json"

    echo '{
      "CN": "stadians local development root",
      "key": {
        "algo": "ecdsa",
        "size": 256
      },
      "ca": {
        "expiry": "8760h"
      }
    }' | jq > "./ca-csr.json"

    echo '{
      "CN": "stadians local development",
      "hosts": [
        "stadians.dev",
        "*.stadians.dev",
        "dev.stadia.st",
        "dev.stadia.run",
        "localhost"
      ],
      "key": {
        "algo": "rsa",
        "size": 2048
      },
      "names": []
    }' | jq > "./csr.json"

    declare root_ca_json
    root_ca_json="$(cfssl gencert -initca "./ca-csr.json")"

    declare root_ca_cert
    echo "$root_ca_json" | jq --raw-output .cert > ./root.pem

    declare root_ca_key
    root_ca_key="$(echo "$root_ca_json" | jq --raw-output .key)"

    CA_KEY="$root_ca_key"  \
      cfssl gencert -config="./config.json" -ca="./root.pem" -ca-key="env:CA_KEY" \
      "./csr.json" |
        cfssljson -bare

    # delete the root cert's key before trusting it
    root_ca_json=""
    root_ca_key=""

    echo

    declare old_certs
    old_certs=$(security find-certificate -c stadian -apZ "/Library/Keychains/System.keychain" | grep SHA-256 | cut -d" " -f 3) || true

    echo "Adding Stadian local development certificate."

    sudo security add-trusted-cert -d -r trustRoot -k "/Library/Keychains/System.keychain" "./root.pem"

    for hash in $old_certs; do
      echo "Removing prior Stadian local development certificate SHA-2-256=$hash."
      sudo security delete-certificate -Z "$hash"
    done

    rm *".json" *".csr"

    mv cert-key.pem key.pem

    echo
  )

  mv "$https_tmp" './.https'
fi

https-file-server() {
  deno run \
    --allow-net --allow-read \
    'https://deno.land/std@0.66.0/http/file_server.ts'  \
    --cert './.https/cert.pem' \
    --key './.https/key.pem' \
    "$@"
}

https-file-server \
  ''./stadia.st/'' \
  --host 'dev.stadia.st' \
  --port 57480 \
  --cors &

sleep 1
echo

https-file-server \
  ''./stadia.run/'' \
  --host 'dev.stadia.run' \
  --port 57481 &

sleep 1
echo

wait

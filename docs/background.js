"use strict";
const {
  runtime: { getURL },
  browserAction,
  tabs,
  windows,
} = chrome;
browserAction.onClicked.addListener(async (activeTab) => {
  const url = getURL("./.htm");
  console.log({ activeTab });
  if (activeTab.url === url) {
    return;
  }
  const matchingTabs = await new Promise((resolve) =>
    tabs.query(
      {
        url: getURL("*"),
      },
      resolve
    )
  );
  if (matchingTabs.length > 0) {
    tabs.update(matchingTabs[0].id, { active: true, highlighted: true });
    for (const [i, tab] of matchingTabs.sort((a, b) => a.id - b.id).entries()) {
      if (i === 0) {
        tabs.update(tab.id, { highlighted: true, active: true });
        windows.update(tab.windowId, { focused: true });
      } else {
        tabs.update(tab.id, { highlighted: true });
      }
    }
  } else {
    await new Promise((resolve) => tabs.create({ url }, resolve));
  }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFja2dyb3VuZC5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsiYmFja2dyb3VuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0EsTUFBTSxFQUNKLE9BQU8sRUFBRSxFQUFFLE1BQU0sRUFBRSxFQUNuQixhQUFhLEVBQ2IsSUFBSSxFQUNKLE9BQU8sR0FDUixHQUFHLE1BQU0sQ0FBQztBQUVYLGFBQWEsQ0FBQyxTQUFTLENBQUMsV0FBVyxDQUFDLEtBQUssRUFBRSxTQUFjLEVBQUUsRUFBRTtJQUMzRCxNQUFNLEdBQUcsR0FBRyxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUM7SUFFN0IsT0FBTyxDQUFDLEdBQUcsQ0FBQyxFQUFFLFNBQVMsRUFBRSxDQUFDLENBQUM7SUFFM0IsSUFBSSxTQUFTLENBQUMsR0FBRyxLQUFLLEdBQUcsRUFBRTtRQUN6QixPQUFPO0tBQ1I7SUFFRCxNQUFNLFlBQVksR0FBZSxNQUFNLElBQUksT0FBTyxDQUFDLENBQUMsT0FBTyxFQUFFLEVBQUUsQ0FDN0QsSUFBSSxDQUFDLEtBQUssQ0FDUjtRQUNFLEdBQUcsRUFBRSxNQUFNLENBQUMsR0FBRyxDQUFDO0tBQ2pCLEVBQ0QsT0FBTyxDQUNSLENBQ0YsQ0FBQztJQUVGLElBQUksWUFBWSxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7UUFDM0IsSUFBSSxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSxXQUFXLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FBQztRQUNyRSxLQUFLLE1BQU0sQ0FBQyxDQUFDLEVBQUUsR0FBRyxDQUFDLElBQUksWUFBWSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLE9BQU8sRUFBRSxFQUFFO1lBQ3pFLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRTtnQkFDWCxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxFQUFFLEVBQUUsRUFBRSxXQUFXLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDO2dCQUN6RCxPQUFPLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxRQUFRLEVBQUUsRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FBQzthQUNqRDtpQkFBTTtnQkFDTCxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxFQUFFLEVBQUUsRUFBRSxXQUFXLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FBQzthQUM1QztTQUNGO0tBQ0Y7U0FBTTtRQUNMLE1BQU0sSUFBSSxPQUFPLENBQUMsQ0FBQyxPQUFPLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsRUFBRSxHQUFHLEVBQUUsRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDO0tBQy9EO0FBQ0gsQ0FBQyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJkZWNsYXJlIGNvbnN0IGNocm9tZTogYW55O1xuY29uc3Qge1xuICBydW50aW1lOiB7IGdldFVSTCB9LFxuICBicm93c2VyQWN0aW9uLFxuICB0YWJzLFxuICB3aW5kb3dzLFxufSA9IGNocm9tZTtcblxuYnJvd3NlckFjdGlvbi5vbkNsaWNrZWQuYWRkTGlzdGVuZXIoYXN5bmMgKGFjdGl2ZVRhYjogYW55KSA9PiB7XG4gIGNvbnN0IHVybCA9IGdldFVSTChcIi4vLmh0bVwiKTtcblxuICBjb25zb2xlLmxvZyh7IGFjdGl2ZVRhYiB9KTtcblxuICBpZiAoYWN0aXZlVGFiLnVybCA9PT0gdXJsKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgY29uc3QgbWF0Y2hpbmdUYWJzOiBBcnJheTxhbnk+ID0gYXdhaXQgbmV3IFByb21pc2UoKHJlc29sdmUpID0+XG4gICAgdGFicy5xdWVyeShcbiAgICAgIHtcbiAgICAgICAgdXJsOiBnZXRVUkwoXCIqXCIpLFxuICAgICAgfSxcbiAgICAgIHJlc29sdmVcbiAgICApXG4gICk7XG5cbiAgaWYgKG1hdGNoaW5nVGFicy5sZW5ndGggPiAwKSB7XG4gICAgdGFicy51cGRhdGUobWF0Y2hpbmdUYWJzWzBdLmlkLCB7IGFjdGl2ZTogdHJ1ZSwgaGlnaGxpZ2h0ZWQ6IHRydWUgfSk7XG4gICAgZm9yIChjb25zdCBbaSwgdGFiXSBvZiBtYXRjaGluZ1RhYnMuc29ydCgoYSwgYikgPT4gYS5pZCAtIGIuaWQpLmVudHJpZXMoKSkge1xuICAgICAgaWYgKGkgPT09IDApIHtcbiAgICAgICAgdGFicy51cGRhdGUodGFiLmlkLCB7IGhpZ2hsaWdodGVkOiB0cnVlLCBhY3RpdmU6IHRydWUgfSk7XG4gICAgICAgIHdpbmRvd3MudXBkYXRlKHRhYi53aW5kb3dJZCwgeyBmb2N1c2VkOiB0cnVlIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGFicy51cGRhdGUodGFiLmlkLCB7IGhpZ2hsaWdodGVkOiB0cnVlIH0pO1xuICAgICAgfVxuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBhd2FpdCBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gdGFicy5jcmVhdGUoeyB1cmwgfSwgcmVzb2x2ZSkpO1xuICB9XG59KTtcbiJdfQ==

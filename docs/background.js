chrome.browserAction.onClicked.addListener(async (activeTab) => {
  const url = chrome.runtime.getURL("./.htm");
  console.log({ activeTab });
  if (activeTab.url === url) {
    return;
  }
  const matchingTabs = await new Promise((resolve) =>
    chrome.tabs.query(
      {
        url: chrome.runtime.getURL("*"),
      },
      resolve
    )
  );
  if (matchingTabs.length > 0) {
    chrome.tabs.update(matchingTabs[0].id, { active: true, highlighted: true });
    for (const [i, tab] of matchingTabs.sort((a, b) => a.id - b.id).entries()) {
      if (i === 0) {
        chrome.tabs.update(tab.id, { highlighted: true, active: true });
        chrome.windows.update(tab.windowId, { focused: true });
      } else {
        chrome.tabs.update(tab.id, { highlighted: true });
      }
    }
  } else {
    await new Promise((resolve) => chrome.tabs.create({ url }, resolve));
  }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFja2dyb3VuZC5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsiYmFja2dyb3VuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxNQUFNLENBQUMsYUFBYSxDQUFDLFNBQVMsQ0FBQyxXQUFXLENBQUMsS0FBSyxFQUFFLFNBQWMsRUFBRSxFQUFFO0lBQ2xFLE1BQU0sR0FBRyxHQUFHLE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBRTVDLE9BQU8sQ0FBQyxHQUFHLENBQUMsRUFBRSxTQUFTLEVBQUUsQ0FBQyxDQUFDO0lBRTNCLElBQUksU0FBUyxDQUFDLEdBQUcsS0FBSyxHQUFHLEVBQUU7UUFDekIsT0FBTztLQUNSO0lBRUQsTUFBTSxZQUFZLEdBQWUsTUFBTSxJQUFJLE9BQU8sQ0FBQyxDQUFDLE9BQU8sRUFBRSxFQUFFLENBQzdELE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUNmO1FBQ0UsR0FBRyxFQUFFLE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQztLQUNoQyxFQUNELE9BQU8sQ0FDUixDQUNGLENBQUM7SUFFRixJQUFJLFlBQVksQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO1FBQzNCLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLFdBQVcsRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDO1FBQzVFLEtBQUssTUFBTSxDQUFDLENBQUMsRUFBRSxHQUFHLENBQUMsSUFBSSxZQUFZLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsT0FBTyxFQUFFLEVBQUU7WUFDekUsSUFBSSxDQUFDLEtBQUssQ0FBQyxFQUFFO2dCQUNYLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxFQUFFLEVBQUUsRUFBRSxXQUFXLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDO2dCQUNoRSxNQUFNLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsUUFBUSxFQUFFLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxDQUFDLENBQUM7YUFDeEQ7aUJBQU07Z0JBQ0wsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLEVBQUUsRUFBRSxFQUFFLFdBQVcsRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDO2FBQ25EO1NBQ0Y7S0FDRjtTQUFNO1FBQ0wsTUFBTSxJQUFJLE9BQU8sQ0FBQyxDQUFDLE9BQU8sRUFBRSxFQUFFLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsRUFBRSxHQUFHLEVBQUUsRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDO0tBQ3RFO0FBQ0gsQ0FBQyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJkZWNsYXJlIGNvbnN0IGNocm9tZTogYW55O1xuXG5jaHJvbWUuYnJvd3NlckFjdGlvbi5vbkNsaWNrZWQuYWRkTGlzdGVuZXIoYXN5bmMgKGFjdGl2ZVRhYjogYW55KSA9PiB7XG4gIGNvbnN0IHVybCA9IGNocm9tZS5ydW50aW1lLmdldFVSTChcIi4vLmh0bVwiKTtcblxuICBjb25zb2xlLmxvZyh7IGFjdGl2ZVRhYiB9KTtcblxuICBpZiAoYWN0aXZlVGFiLnVybCA9PT0gdXJsKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgY29uc3QgbWF0Y2hpbmdUYWJzOiBBcnJheTxhbnk+ID0gYXdhaXQgbmV3IFByb21pc2UoKHJlc29sdmUpID0+XG4gICAgY2hyb21lLnRhYnMucXVlcnkoXG4gICAgICB7XG4gICAgICAgIHVybDogY2hyb21lLnJ1bnRpbWUuZ2V0VVJMKFwiKlwiKSxcbiAgICAgIH0sXG4gICAgICByZXNvbHZlXG4gICAgKVxuICApO1xuXG4gIGlmIChtYXRjaGluZ1RhYnMubGVuZ3RoID4gMCkge1xuICAgIGNocm9tZS50YWJzLnVwZGF0ZShtYXRjaGluZ1RhYnNbMF0uaWQsIHsgYWN0aXZlOiB0cnVlLCBoaWdobGlnaHRlZDogdHJ1ZSB9KTtcbiAgICBmb3IgKGNvbnN0IFtpLCB0YWJdIG9mIG1hdGNoaW5nVGFicy5zb3J0KChhLCBiKSA9PiBhLmlkIC0gYi5pZCkuZW50cmllcygpKSB7XG4gICAgICBpZiAoaSA9PT0gMCkge1xuICAgICAgICBjaHJvbWUudGFicy51cGRhdGUodGFiLmlkLCB7IGhpZ2hsaWdodGVkOiB0cnVlLCBhY3RpdmU6IHRydWUgfSk7XG4gICAgICAgIGNocm9tZS53aW5kb3dzLnVwZGF0ZSh0YWIud2luZG93SWQsIHsgZm9jdXNlZDogdHJ1ZSB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNocm9tZS50YWJzLnVwZGF0ZSh0YWIuaWQsIHsgaGlnaGxpZ2h0ZWQ6IHRydWUgfSk7XG4gICAgICB9XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIGF3YWl0IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiBjaHJvbWUudGFicy5jcmVhdGUoeyB1cmwgfSwgcmVzb2x2ZSkpO1xuICB9XG59KTtcblxuZXhwb3J0IHt9O1xuIl19

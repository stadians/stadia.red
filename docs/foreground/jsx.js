const renderChild = content => {
  if (content === null || content === undefined) {
    return document.createElement("span");
  } else if (content instanceof Node) {
    return content;
  } else if (
    typeof content === "string" ||
    typeof content === "number" ||
    typeof content === "boolean"
  ) {
    return document.createTextNode(String(content));
  } else {
    const container = document.createDocumentFragment();
    for (const child of content) {
      container.appendChild(renderChild(child));
    }
    return container;
  }
};
const componentsByName = new Map();
const namesByComponent = new Map();
export const createElement = (type, props, ...children) => {
  props = { ...(props || {}) };
  const style = props.style;
  delete props.style;
  let el;
  if (typeof type === "string") {
    el = document.createElement(type);
    Object.assign(el, props);
    el.appendChild(renderChild(children));
  } else {
    let name = namesByComponent.get(type);
    if (!name) {
      const ownName = type.name || "_component";
      let count = 1;
      name = ownName;
      while (componentsByName.has(name)) {
        count += 1;
        name = ownName + count;
      }
      componentsByName.set(name, type);
      namesByComponent.set(type, name);
    }
    el = type(Object.assign(props, { children }));
    if (type.name) {
      el.classList.add(name);
    }
  }
  if (style) {
    Object.assign(el.style, style);
  }
  return el;
};
Object.assign(window, {
  JSX: {
    createElement,
  },
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoianN4LmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJmb3JlZ3JvdW5kL2pzeC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxNQUFNLFdBQVcsR0FBRyxDQUFDLE9BQW1CLEVBQVEsRUFBRTtJQUNoRCxJQUFJLE9BQU8sS0FBSyxJQUFJLElBQUksT0FBTyxLQUFLLFNBQVMsRUFBRTtRQUM3QyxPQUFPLFFBQVEsQ0FBQyxhQUFhLENBQUMsTUFBTSxDQUFDLENBQUM7S0FDdkM7U0FBTSxJQUFJLE9BQU8sWUFBWSxJQUFJLEVBQUU7UUFDbEMsT0FBTyxPQUFPLENBQUM7S0FDaEI7U0FBTSxJQUNMLE9BQU8sT0FBTyxLQUFLLFFBQVE7UUFDM0IsT0FBTyxPQUFPLEtBQUssUUFBUTtRQUMzQixPQUFPLE9BQU8sS0FBSyxTQUFTLEVBQzVCO1FBQ0EsT0FBTyxRQUFRLENBQUMsY0FBYyxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO0tBQ2pEO1NBQU07UUFDTCxNQUFNLFNBQVMsR0FBRyxRQUFRLENBQUMsc0JBQXNCLEVBQUUsQ0FBQztRQUNwRCxLQUFLLE1BQU0sS0FBSyxJQUFJLE9BQU8sRUFBRTtZQUMzQixTQUFTLENBQUMsV0FBVyxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO1NBQzNDO1FBQ0QsT0FBTyxTQUFTLENBQUM7S0FDbEI7QUFDSCxDQUFDLENBQUM7QUFFRixNQUFNLGdCQUFnQixHQUFHLElBQUksR0FBRyxFQUFFLENBQUM7QUFDbkMsTUFBTSxnQkFBZ0IsR0FBRyxJQUFJLEdBQUcsRUFBRSxDQUFDO0FBQ25DLE1BQU0sQ0FBQyxNQUFNLGFBQWEsR0FBRyxDQUMzQixJQUFtRSxFQUNuRSxLQUEwQixFQUMxQixHQUFHLFFBQTJCLEVBQ2pCLEVBQUU7SUFDZixLQUFLLEdBQUcsRUFBRSxHQUFHLENBQUMsS0FBSyxJQUFJLEVBQUUsQ0FBQyxFQUFFLENBQUM7SUFDN0IsTUFBTSxLQUFLLEdBQUcsS0FBSyxDQUFDLEtBQUssQ0FBQztJQUMxQixPQUFPLEtBQUssQ0FBQyxLQUFLLENBQUM7SUFFbkIsSUFBSSxFQUFlLENBQUM7SUFDcEIsSUFBSSxPQUFPLElBQUksS0FBSyxRQUFRLEVBQUU7UUFDNUIsRUFBRSxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDbEMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxFQUFFLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFDekIsRUFBRSxDQUFDLFdBQVcsQ0FBQyxXQUFXLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztLQUN2QztTQUFNO1FBQ0wsSUFBSSxJQUFJLEdBQUcsZ0JBQWdCLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3RDLElBQUksQ0FBQyxJQUFJLEVBQUU7WUFDVCxNQUFNLE9BQU8sR0FBRyxJQUFJLENBQUMsSUFBSSxJQUFJLFlBQVksQ0FBQztZQUMxQyxJQUFJLEtBQUssR0FBRyxDQUFDLENBQUM7WUFDZCxJQUFJLEdBQUcsT0FBTyxDQUFDO1lBRWYsT0FBTyxnQkFBZ0IsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEVBQUU7Z0JBQ2pDLEtBQUssSUFBSSxDQUFDLENBQUM7Z0JBQ1gsSUFBSSxHQUFHLE9BQU8sR0FBRyxLQUFLLENBQUM7YUFDeEI7WUFFRCxnQkFBZ0IsQ0FBQyxHQUFHLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDO1lBQ2pDLGdCQUFnQixDQUFDLEdBQUcsQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUM7U0FDbEM7UUFDRCxFQUFFLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLEVBQUUsUUFBUSxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQzlDLElBQUksSUFBSSxDQUFDLElBQUksRUFBRTtZQUNiLEVBQUUsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDO1NBQ3hCO0tBQ0Y7SUFFRCxJQUFJLEtBQUssRUFBRTtRQUNULE1BQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLEtBQUssRUFBRSxLQUFLLENBQUMsQ0FBQztLQUNoQztJQUVELE9BQU8sRUFBRSxDQUFDO0FBQ1osQ0FBQyxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUU7SUFDcEIsR0FBRyxFQUFFO1FBQ0gsYUFBYTtLQUNkO0NBQ0YsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHR5cGUgUmVuZGVyYWJsZSA9IEpTWC5SZW5kZXJhYmxlO1xuXG5jb25zdCByZW5kZXJDaGlsZCA9IChjb250ZW50OiBSZW5kZXJhYmxlKTogTm9kZSA9PiB7XG4gIGlmIChjb250ZW50ID09PSBudWxsIHx8IGNvbnRlbnQgPT09IHVuZGVmaW5lZCkge1xuICAgIHJldHVybiBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3BhblwiKTtcbiAgfSBlbHNlIGlmIChjb250ZW50IGluc3RhbmNlb2YgTm9kZSkge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9IGVsc2UgaWYgKFxuICAgIHR5cGVvZiBjb250ZW50ID09PSBcInN0cmluZ1wiIHx8XG4gICAgdHlwZW9mIGNvbnRlbnQgPT09IFwibnVtYmVyXCIgfHxcbiAgICB0eXBlb2YgY29udGVudCA9PT0gXCJib29sZWFuXCJcbiAgKSB7XG4gICAgcmV0dXJuIGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKFN0cmluZyhjb250ZW50KSk7XG4gIH0gZWxzZSB7XG4gICAgY29uc3QgY29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpO1xuICAgIGZvciAoY29uc3QgY2hpbGQgb2YgY29udGVudCkge1xuICAgICAgY29udGFpbmVyLmFwcGVuZENoaWxkKHJlbmRlckNoaWxkKGNoaWxkKSk7XG4gICAgfVxuICAgIHJldHVybiBjb250YWluZXI7XG4gIH1cbn07XG5cbmNvbnN0IGNvbXBvbmVudHNCeU5hbWUgPSBuZXcgTWFwKCk7XG5jb25zdCBuYW1lc0J5Q29tcG9uZW50ID0gbmV3IE1hcCgpO1xuZXhwb3J0IGNvbnN0IGNyZWF0ZUVsZW1lbnQgPSAoXG4gIHR5cGU6IHN0cmluZyB8ICgocHJvcHM6IFJlY29yZDxzdHJpbmcsIFJlbmRlcmFibGU+KSA9PiBIVE1MRWxlbWVudCksXG4gIHByb3BzOiBSZWNvcmQ8c3RyaW5nLCBhbnk+LFxuICAuLi5jaGlsZHJlbjogQXJyYXk8UmVuZGVyYWJsZT5cbik6IEhUTUxFbGVtZW50ID0+IHtcbiAgcHJvcHMgPSB7IC4uLihwcm9wcyB8fCB7fSkgfTtcbiAgY29uc3Qgc3R5bGUgPSBwcm9wcy5zdHlsZTtcbiAgZGVsZXRlIHByb3BzLnN0eWxlO1xuXG4gIGxldCBlbDogSFRNTEVsZW1lbnQ7XG4gIGlmICh0eXBlb2YgdHlwZSA9PT0gXCJzdHJpbmdcIikge1xuICAgIGVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCh0eXBlKTtcbiAgICBPYmplY3QuYXNzaWduKGVsLCBwcm9wcyk7XG4gICAgZWwuYXBwZW5kQ2hpbGQocmVuZGVyQ2hpbGQoY2hpbGRyZW4pKTtcbiAgfSBlbHNlIHtcbiAgICBsZXQgbmFtZSA9IG5hbWVzQnlDb21wb25lbnQuZ2V0KHR5cGUpO1xuICAgIGlmICghbmFtZSkge1xuICAgICAgY29uc3Qgb3duTmFtZSA9IHR5cGUubmFtZSB8fCBcIl9jb21wb25lbnRcIjtcbiAgICAgIGxldCBjb3VudCA9IDE7XG4gICAgICBuYW1lID0gb3duTmFtZTtcblxuICAgICAgd2hpbGUgKGNvbXBvbmVudHNCeU5hbWUuaGFzKG5hbWUpKSB7XG4gICAgICAgIGNvdW50ICs9IDE7XG4gICAgICAgIG5hbWUgPSBvd25OYW1lICsgY291bnQ7XG4gICAgICB9XG5cbiAgICAgIGNvbXBvbmVudHNCeU5hbWUuc2V0KG5hbWUsIHR5cGUpO1xuICAgICAgbmFtZXNCeUNvbXBvbmVudC5zZXQodHlwZSwgbmFtZSk7XG4gICAgfVxuICAgIGVsID0gdHlwZShPYmplY3QuYXNzaWduKHByb3BzLCB7IGNoaWxkcmVuIH0pKTtcbiAgICBpZiAodHlwZS5uYW1lKSB7XG4gICAgICBlbC5jbGFzc0xpc3QuYWRkKG5hbWUpO1xuICAgIH1cbiAgfVxuXG4gIGlmIChzdHlsZSkge1xuICAgIE9iamVjdC5hc3NpZ24oZWwuc3R5bGUsIHN0eWxlKTtcbiAgfVxuXG4gIHJldHVybiBlbDtcbn07XG5cbk9iamVjdC5hc3NpZ24od2luZG93LCB7XG4gIEpTWDoge1xuICAgIGNyZWF0ZUVsZW1lbnQsXG4gIH0sXG59KTtcbiJdfQ==
